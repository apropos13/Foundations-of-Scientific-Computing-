==7785== Memcheck, a memory error detector
==7785== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7785== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7785== Command: ./myprog3
==7785== 
==7785== Invalid write of size 8
==7785==    at 0x100000D54: MAIN__ (buggy_code_3.f90:41)
==7785==    by 0x100000D96: main (buggy_code_3.f90:52)
==7785==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7785== 

Program received signal SIGSEGV: Segmentation fault - invalid memory reference.

Backtrace for this error:
#0  0x1000a758c
#1  0x1000a6923
--7785-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--7785-- si_code=1;  Faulting address: 0x700006E6E000;  sp: 0x700006aadc68

valgrind: the 'impossible' happened:
   Killed by fatal signal

host stacktrace:
==7785==    at 0x258059B1C: ???
==7785==    by 0x2580BCD03: ???
==7785==    by 0x2580BB561: ???
==7785==    by 0x2580B96AD: ???
==7785==    by 0x2580CA8D3: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 771)
==7785==    at 0x100619DD6: __pthread_kill (in /usr/lib/system/libsystem_kernel.dylib)
==7785==    by 0x100770786: pthread_kill (in /usr/lib/system/libsystem_pthread.dylib)
==7785==    by 0x1004D8496: raise (in /usr/lib/system/libsystem_c.dylib)
==7785==    by 0x25805BBB1: ???
==7785==    by 0x100000D96: main (buggy_code_3.f90:52)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

